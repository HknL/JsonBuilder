/*
 * Copyright (C) HÃ¥kon Lindquist
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
version = '0.2.10'

allprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  
  repositories {
    mavenCentral()
  }
}

project(':core') {
}
 
project(':gson') {
  dependencies {
    compile project(':core')
    compile 'com.google.code.gson:gson:2.2'
  }
}

project(':jackson') {
  dependencies {
    compile project(':core')
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.4'
  }
}

project(':jsonsimple') {
  dependencies {
    compile project(':core')
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
  }
}

project(':jsonsmart') {
  dependencies {
    compile project(':core')
    compile 'net.minidev:json-smart:2.1.1'
  }
}

project(':minimaljson') {
  dependencies {
    compile project(':core')
    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.2'
  }
}

project(':mongodb') {
  dependencies {
    compile project(':core')
    compile 'org.mongodb:mongo-java-driver:2.12.3'
  }
}


project(':tests') {
  dependencies {
    compile 'junit:junit:4.11'
    compile 'org.skyscreamer:jsonassert:1.2.3'
    compile project(':core')
    compile project(':gson')
    compile project(':jackson')
    compile project(':jsonsimple')
    compile project(':jsonsmart')
    compile project(':minimaljson')
    compile project(':mongodb')
  }
  
  test.dependsOn(":gson:build")
}

List<String> allSubProjects = [':core',':gson',':jackson',':jsonsimple',':jsonsmart',':minimaljson',':mongodb']
task pack( type: Jar , dependsOn: build) {
  if(project.hasProperty('libs')) {
    def partialSubProjects = project.getProperty('libs').split(",")
    allSubProjects = partialSubProjects.collect{it as String} + "core";
  }
  baseName = 'JsonBuilder'
  from files(allSubProjects.collect{ project(it).sourceSets.main.output })
}